true t f = t
false t f = f

id x = x
const x u = x

isZero a = a (const false) true

pred n f x = (
  extract k = k id
  inc g h = h (g f)
  const u = x
  extract (n inc const)
)

a - b = b pred a

a <= b =
  if (isZero a) true
  else if (isZero b) false
  else ((a - 1) <= (b - 1))

a * b = (
  comp x = a (b x)
  comp
)

fac n =
  if (n <= 0) 1
  else (
    prev = fac (n - 1)
    n * prev
  )

5

-- do (
--   n <- readInt
--   writeInt (fac n)
-- )
